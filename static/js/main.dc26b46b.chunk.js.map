{"version":3,"sources":["calendar/calendar.tsx","App.js","reportWebVitals.js","index.js"],"names":["moment","extendMoment","Moment","weekDays","name","today","MAP_TYPES","webinar","deadline","ActivityElement","props","className","type","time","Calendar","this","dateStart","format","monthStart","startOf","monthEnd","endOf","weeksRange","Array","from","range","by","console","log","daysRange","map","week","weekStart","clone","weekEnd","day","getAllMonthDays","classList","month","push","isAfter","activities","filter","a","date","join","isSame","activity","Component","fakeActivites","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc26b46b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './calendar.css';\r\n\r\nimport * as Moment from 'moment';\r\nimport { extendMoment } from 'moment-range';\r\nconst moment = extendMoment(Moment);\r\n\r\n\r\n// Описание пропсов и state в текущем компоненте (через типы)\r\nexport interface Activity {\r\n   type: 'webinar | deadline'\r\n   name: string\r\n   time: string\r\n   date: string\r\n}\r\n\r\ntype Props = {\r\n   activities: Activity[]\r\n   dateStart?: string               //dateStart можно передавать не обязательно\r\n}\r\n\r\ntype State = {\r\n\r\n}\r\n\r\nconst weekDays = [\r\n   {\r\n      name: 'Пн'\r\n   },\r\n   {\r\n      name: 'Вт'\r\n   },\r\n   {\r\n      name: 'Ср'\r\n   },\r\n   {\r\n      name: 'Чт'\r\n   },\r\n   {\r\n      name: 'Пт'\r\n   },\r\n   {\r\n      name: 'Сб'\r\n   },\r\n   {\r\n      name: 'Вс'\r\n   },\r\n];\r\n\r\nconst today = moment();\r\n\r\nconst MAP_TYPES = {\r\n   webinar: 'Вебинар',\r\n   deadline: 'Дедлайн'\r\n}\r\n\r\nconst ActivityElement = (props: Activity) => (\r\n   <div className={'calendar__activity ' + (props.type === 'webinar'\r\n      ? 'calendar__activity--webinar'\r\n      : 'calendar__activity--deadline')}>\r\n      {/* <div className='calendar__activity__title'> {\r\n         props.type === 'webinar' ? 'Вебинар' : 'Дедлайн'\r\n      }</div> */}\r\n      <div className='calendar__activity__title'> {\r\n         MAP_TYPES[props.type]\r\n      }</div>\r\n      <div className='calendar__activity__name'>{props.name}</div>\r\n      <div className='calendar__activity__time'>{props.time}</div>\r\n   </div>\r\n)\r\n\r\nexport default class Calendar extends Component<Props, State> {\r\n   get getAllMonthDays() {\r\n      const { dateStart = today.format('YYYY-MM-DD') } = this.props;\r\n      const monthStart = moment(dateStart).startOf('month').startOf('isoWeek');\r\n      const monthEnd = moment(dateStart).endOf('month').endOf('isoWeek');\r\n      // const monthStart = moment().startOf('month').startOf('isoWeek');\r\n      // const monthEnd = moment().endOf('month').endOf('isoWeek');\r\n      const weeksRange = Array.from(moment.range(monthStart, monthEnd).by('weeks'));\r\n      console.log(weeksRange);\r\n\r\n      const daysRange = weeksRange.map((week) => {\r\n         const weekStart = week.clone().startOf('isoWeek');\r\n         const weekEnd = week.clone().endOf('isoWeek');\r\n\r\n         return Array.from(moment.range(weekStart, weekEnd).by('days'))\r\n      })\r\n      console.log(daysRange);\r\n      return daysRange;\r\n\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"calendar\">\r\n            <div className=\"calendar__header\">\r\n               {weekDays.map((day) => (\r\n                  <div className=\"calendar__week-day\">{day.name}</div>\r\n               ))}\r\n            </div>\r\n            <div className=\"calendar__cells-wrapper\">\r\n               {this.getAllMonthDays.map((week) => (\r\n                  <div className=\"calendar__row\">{\r\n                     week.map((day) => {\r\n                        const classList = ['calendar__cell_inner'];\r\n                        if (day.month() !== today.month()) {\r\n                           classList.push('calendar__cell_inner--disable')\r\n                        }\r\n                        if (today.isAfter(day)) {\r\n                           classList.push('calendar__cell_inner--passed')\r\n                        }\r\n\r\n                        const activities = this.props.activities.filter((a) => {\r\n                           return a.date === day.format('YYYY-MM-DD')\r\n                        });\r\n                        return (\r\n                           <div className=\"calendar__cell\">\r\n                              <div className={classList.join(' ')}>\r\n                                 <div className=\"calendar__day-wrapper\">\r\n                                    {today.isSame(day, 'day') ? (\r\n                                       <div className=\"calendar__cell-today\">{day.format('DD')}</div>\r\n                                    ) : day.format('DD')}\r\n                                 </div>\r\n                                 {activities.map((activity) => {\r\n                                    return <ActivityElement {...activity}/>\r\n                                 })}\r\n                              </div>\r\n                           </div>\r\n                        )\r\n                     })\r\n                  }</div>\r\n               ))}\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}","import './App.css';\nimport Calendar from './calendar/calendar.tsx';\n\nconst fakeActivites: Activity[] = [\n   {\n      name: 'Занятие 1',\n      time: '19:00',\n      type: 'webinar',\n      date: '2021-07-31'\n   },{\n      name: 'Занятие 2',\n      time: '19:00',\n      type: 'webinar',\n      date: '2021-08-14'\n   },{\n      name: 'Занятие 3',\n      time: '19:00',\n      type: 'webinar',\n      date: '2021-08-21'\n   },{\n      name: 'Занятие 4',\n      time: '19:00',\n      type: 'webinar',\n      date: '2021-08-28'\n   },{\n      name: 'Занятие 4',\n      time: '19:00',\n      type: 'webinar',\n      date: '2021-09-04'\n   },{\n      name: 'ДЗ 1',\n      time: '23:59',\n      type: 'deadline',\n      date: '2021-08-10'\n   },{\n      name: 'ДЗ 2',\n      time: '23:59',\n      type: 'deadline',\n      date: '2021-08-31'\n   }\n]\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Calendar activities={fakeActivites}\n           dateStart={'2021-08-01'}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}